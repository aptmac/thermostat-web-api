swagger: '2.0'

info:
  version: "0.0.1"
  title: Thermostat Web API
  license:
    name: GPL v2 with Classpath Exception
    url: http://www.gnu.org/licenses


consumes: ['application/json']
produces: ['application/json', 'text/html; charset=utf-8']
paths:

#
# agents -> host
# agents -> jvms

# can restrict at each level (easier to do restrict to all jvms under specific host, etc.)
# agents -> host -> jvms

# Tree-based restriction (file-system-like)
# /*
# /agents/agentid/*
# agents -> host -> info
#

# Collections in 2.0: revision 3c990cdff9ad

# schema-info
  /schema:
    get:
      description: Gets schema information for the storage
      parameters:
        - $ref: '#/parameters/count'
        - $ref: '#/parameters/sort'
      responses:
        401:
          $ref: '#/responses/unauthorized'
        200:
          description: OK
          schema:
              type: array
              items:
                $ref: '#/definitions/schema-info'
    put:
      description: Adds or updates schema information for the storage
      parameters:
        - $ref: '#/parameters/schema-info'      
      responses:
        401:
          $ref: '#/responses/unauthorized'
        200:
          description: OK
    delete:
      description: Deletes all schema information
      responses:
        401:
          $ref: '#/responses/unauthorized'      
        200:
          description: OK
# agent-config
  /agents/{agentId}:
    parameters:
      - $ref: '#/parameters/agent-id'    
    get:
      description: Gets information for an agent. Use 'all' as the agentId to query all agents
      parameters:
        - $ref: '#/parameters/count'
        - $ref: '#/parameters/sort'
      responses:
        401:
          $ref: '#/responses/unauthorized'
        200:
          description: OK
          schema:
              type: array
              items:
                $ref: '#/definitions/agent-info'
    put:
      description: Adds or updates information for the agent
      parameters:
        - $ref: '#/parameters/agent-info'
      responses:
        401:
          $ref: '#/responses/unauthorized'
        200:
          description: OK
    delete:
      description: Deletes information for the agent
      responses:
        401:
          $ref: '#/responses/unauthorized'      
        200:
          description: OK
# backend-info    
  /agents/{agentId}/backend:
    parameters:
      - $ref: '#/parameters/agent-id'    
    get:
      description: Gets backend information for an agent.
      parameters:
        - $ref: '#/parameters/count'
        - $ref: '#/parameters/sort'
      responses:
        401:
          $ref: '#/responses/unauthorized'
        200:
          description: OK
          schema:
              type: array
              items:
                $ref: '#/definitions/backend-info'
    put:
      description: Adds or updates backend information for the agent
      parameters:
        - $ref: '#/parameters/backend-info'
      responses:
        401:
          $ref: '#/responses/unauthorized'
        200:
          description: OK
    delete:
      description: Deletes backend information for the agent
      responses:
        401:
          $ref: '#/responses/unauthorized'      
        200:
          description: OK
# host-info
  /agents/{agentId}/host:
    parameters:
      - $ref: '#/parameters/agent-id'
    get:
      description: Gets information for the host machine monitored by the agent
      parameters:
        - $ref: '#/parameters/count'
        - $ref: '#/parameters/sort'
      responses:
        401:
          $ref: '#/responses/unauthorized'      
        200:
          description: OK
          schema:
            $ref: '#/definitions/host-info'
    put:
      description: Adds or updates information for the host machine monitored by the agent
      parameters:
        - $ref: '#/parameters/host-info'
      responses:
        401:
          $ref: '#/responses/unauthorized'      
        200:
          description: OK
    delete:
      description: Deletes host information for the agent
      responses:
        401:
          $ref: '#/responses/unauthorized'      
        200:
          description: OK
# network-info
  /agents/{agentId}/host/network:
    parameters:
      - $ref: '#/parameters/agent-id'
    get:
      description: Gets network information for the host machine
      parameters:
        - $ref: '#/parameters/count'
        - $ref: '#/parameters/sort'
      responses:
        401:
          $ref: '#/responses/unauthorized'      
        200:
          description: OK
          schema:
            $ref: '#/definitions/network-info'
    put:
      description: Adds or updates network information for the host machine
      parameters:
        - $ref: '#/parameters/network-info'
      responses:
        401:
          $ref: '#/responses/unauthorized'      
        200:
          description: OK  
    delete:
      description: Deletes network information for the agent
      responses:
        401:
          $ref: '#/responses/unauthorized'      
        200:
          description: OK

# cpu-stats
  /agents/{agentId}/host/cpu/stats:
    parameters:
      - $ref: '#/parameters/agent-id'
    get:
      description: Gets most recent CPU statistics for the host
      parameters:
        - $ref: '#/parameters/count'
        - $ref: '#/parameters/sort'
        - $ref: '#/parameters/maxTimestamp'
        - $ref: '#/parameters/minTimestamp'
      responses:
        401:
          $ref: '#/responses/unauthorized'      
        200:
          description: OK
          schema:
            $ref: '#/definitions/host-cpu-stats'
    put:
      description: Adds or updates CPU statistics for the host machine
      parameters:
        - $ref: '#/parameters/host-cpu-stats'
      responses:
        401:
          $ref: '#/responses/unauthorized'      
        200:
          description: OK  
# memory-stats
  /agents/{agentId}/host/memory/stats:
    parameters:
      - $ref: '#/parameters/agent-id'
    get:
      description: Gets most recent memory statistics for the host
      parameters:
        - $ref: '#/parameters/count'
        - $ref: '#/parameters/sort'
        - $ref: '#/parameters/maxTimestamp'
        - $ref: '#/parameters/minTimestamp'
      responses:
        401:
          $ref: '#/responses/unauthorized'      
        200:
          description: OK
          schema:
            $ref: '#/definitions/host-memory-stats'
    put:
      description: Adds or updates memory statistics for the host machine
      parameters:
        - $ref: '#/parameters/host-memory-stats'
      responses:
        401:
          $ref: '#/responses/unauthorized'      
        200:
          description: OK  
# numa-host-info
  /agents/{agentId}/host/numa:
    parameters:
      - $ref: '#/parameters/agent-id'
    get:
      description: Gets NUMA information for the host
      parameters:
        - $ref: '#/parameters/count'
        - $ref: '#/parameters/sort'
      responses:
        401:
          $ref: '#/responses/unauthorized'      
        200:
          description: OK
          schema:
            $ref: '#/definitions/host-numa-info'
    put:
      description: Adds or updates NUMA information for the host machine
      parameters:
        - $ref: '#/parameters/host-numa-info'
      responses:
        401:
          $ref: '#/responses/unauthorized'      
        200:
          description: OK  
# numa-stat
  /agents/{agentId}/host/numa/stats:
    parameters:
      - $ref: '#/parameters/agent-id'
    get:
      description: Gets NUMA statistics for the host
      parameters:
        - $ref: '#/parameters/count'
        - $ref: '#/parameters/sort'
        - $ref: '#/parameters/maxTimestamp'
        - $ref: '#/parameters/minTimestamp'
      responses:
        401:
          $ref: '#/responses/unauthorized'      
        200:
          description: OK
          schema:
            $ref: '#/definitions/host-numa-stats'
    put:
      description: Adds or updates NUMA statistics for the host machine
      parameters:
        - $ref: '#/parameters/host-numa-stats'
      responses:
        401:
          $ref: '#/responses/unauthorized'      
        200:
          description: OK  
          
# vm-info
  /agents/{agentId}/host/vms/{vmId}:
    parameters:
      - $ref: '#/parameters/agent-id'
      - $ref: '#/parameters/vm-id'    
    get:
      description: Gets information for a jvm monitored by an agent
      parameters:
        - $ref: '#/parameters/count'
        - $ref: '#/parameters/sort'
      responses:
        401:
          $ref: '#/responses/unauthorized'      
        200:
          description: OK
          schema:
            $ref: '#/definitions/vm-info'

# vm-class-stats
# vm-gc-stats
# vm-numa-stats
# vm-cpu-stats
  /agents/{agentId}/host/vms/{vmId}/cpu/stats:
    parameters:
      - $ref: '#/parameters/agent-id'
      - $ref: '#/parameters/vm-id'
    get:
      description: Gets most recent cpu statistics for the jvm
      parameters:
        - $ref: '#/parameters/count'
        - $ref: '#/parameters/sort'
        - $ref: '#/parameters/maxTimestamp'
        - $ref: '#/parameters/minTimestamp'
      responses:
        401:
          $ref: '#/responses/unauthorized'      
        200:
          description: OK
          schema:
            $ref: '#/definitions/vm-cpu-stats'
    post:
      description: Gets most recent cpu statistics for the jvm
      parameters:
        - $ref: '#/parameters/filters'
        - $ref: '#/parameters/count'
        - $ref: '#/parameters/sort'
      responses:
        401:
          $ref: '#/responses/unauthorized'      
        200:
          description: OK
          schema:
            $ref: '#/definitions/vm-cpu-stats'
    put:
      description: Adds cpu statistics for the jvm
      parameters:
        - $ref: '#/parameters/vm-cpu-stats'
        - $ref: '#/parameters/tags'
      responses:
        401:
          $ref: '#/responses/unauthorized'      
        200:
          description: OK

# vm-memory-stats
# vm-io-stats
# vm-compiler-stats
# vm-heap-info
# vm-jmx-notification
# vm-jmx-notification-stats
# vm-tlab-stats


# profile-status
# profile-info

# vm-thread-summary
# vm-thread-session
# vm-thread-state

# vm-thread-lock
# vm-deadlock-data

# vm-thread-harvesting TODO: Improve collection schema and function


definitions:
  filters:
    type: array
    items:
      $ref: '#/definitions/filter'
  filter:
    type: object
    properties:
      key:
        type: string
      comparator:
        type: string
      value:
        type: string
    required:
      - key
      - comparator
      - value
      
  schema-info:
    type: object
  agent-info:
    type: object
  backend-info:
    type: object
    
  host-info:
    type: object
  network-info:
    type: object
    
  host-cpu-stats:
    type: object
  host-memory-stats:
    type: object
    
  host-numa-info:
    type: object
  host-numa-stats:
    type: object
    
  vm-info:
    type: object
  vm-cpu-stats:
    type: object
    
parameters:
  agent-id:
    name: agentId
    in: path
    description: The agent identification number
    type: number
    required: true
  vm-id:
    name: vmId
    in: path
    description: The jvm identification number
    type: number
    required: true
  schema-info:
    name: schemaInfo
    in: body
    description: The agent's schema information
    required: true
    schema:
      $ref: '#/definitions/schema-info'
  agent-info:
    name: agentInfo
    in: body
    description: The agent information
    required: true
    schema:
      $ref: '#/definitions/agent-info'
  backend-info:
    name: backendInfo
    in: body
    description: The backends registered for an agent
    required: true
    schema:
      $ref: '#/definitions/backend-info'      
  host-info:
    name: hostInfo
    in: body
    description: The host information
    required: true
    schema:
      $ref: '#/definitions/host-info'
  network-info:
    name: networkInfo
    in: body
    description: The host's network information
    required: true
    schema:
      $ref: '#/definitions/network-info'

  host-cpu-stats:
    name: hostCpuStats
    in: body
    description: The host cpu statistics
    required: true
    schema:
      $ref: '#/definitions/host-cpu-stats'
  host-memory-stats:
    name: hostMemoryStats
    in: body
    description: The host memory statistics
    required: true
    schema:
      $ref: '#/definitions/host-memory-stats'

  host-numa-info:
    name: hostNumaInfo
    in: body
    description: The host NUMA information
    required: true
    schema:
      $ref: '#/definitions/host-numa-info'
  host-numa-stats:
    name: hostNumaStats
    in: body
    description: The host NUMA statistics
    required: true
    schema:
      $ref: '#/definitions/host-numa-stats'

  vm-cpu-stats:
    name: vmCpuStats
    in: body
    description: The jvm CPU information
    required: true
    schema:
      $ref: '#/definitions/vm-cpu-stats'
    
  tags:
    name: tags
    in: query
    description: CSV of tags
    type: string
  count:
    name: count
    in: query
    description: Count of media to return.
    type: integer
  filters:
    name: filters
    in: body
    description: Key, Comparator, Value trios to filter the data
    schema:
      $ref: '#/definitions/filters'
  sort:
    name: sort
    in: query
    description: Order to sort by (1 or -1).
    type: integer
  maxTimestamp:  
    name: max_timestamp
    in: query
    description: Return media before this timestamp.
    type: integer
  minTimestamp:  
    name: min_timestamp
    in: query
    description: Return media after this timestamp.
    type: integer
    
responses:
  unauthorized:
    description: Access prohibited.